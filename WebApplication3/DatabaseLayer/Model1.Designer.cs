//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("JobFindModel", "FK_UserTable_AccountStatusTable", "AccountStatusTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.AccountStatusTable), "UserTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.UserTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_CertificateTable_EmployeeTable", "EmployeeTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.EmployeeTable), "CertificateTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.CertificateTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_CompanyTable_UserTable", "UserTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.UserTable), "CompanyTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.CompanyTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_PostJobTable_CompanyTable", "CompanyTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.CompanyTable), "PostJobTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.PostJobTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_EducationTable_CountryTable", "CountryTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.CountryTable), "EducationTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.EducationTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_EmployeeTable_CountryTable", "CountryTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.CountryTable), "EmployeeTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.EmployeeTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_WorkExpericenTable_CountryTable", "CountryTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.CountryTable), "WorkExpericenTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.WorkExpericenTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_EducationTable_EmployeeTable", "EmployeeTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.EmployeeTable), "EducationTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.EducationTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_EmployeeTable_JobCategoryTable", "JobCategoryTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.JobCategoryTable), "EmployeeTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.EmployeeTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_EmployeeTable_UserTable", "UserTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.UserTable), "EmployeeTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.EmployeeTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_JobApplyTable_EmployeeTable", "EmployeeTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.EmployeeTable), "JobApplyTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.JobApplyTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_LanguageTable_EmployeeTable", "EmployeeTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.EmployeeTable), "LanguageTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.LanguageTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_SkillTable_EmployeeTable", "EmployeeTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.EmployeeTable), "SkillTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.SkillTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_JobApplyTable_JobApplyStatusTable", "JobApplyStatusTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.JobApplyStatusTable), "JobApplyTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.JobApplyTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_JobApplyTable_PostJobTable", "PostJobTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.PostJobTable), "JobApplyTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.JobApplyTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_PostJobTable_JobCategoryTable", "JobCategoryTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.JobCategoryTable), "PostJobTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.PostJobTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_PostJobTable_JobNatureTable", "JobNatureTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.JobNatureTable), "PostJobTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.PostJobTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_JobRequirementDetailTable_JobRequirementsTable", "JobRequirementsTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.JobRequirementsTable), "JobRequirementDetailTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.JobRequirementDetailTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_PostJobTable_JobRequirementsTable", "JobRequirementsTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.JobRequirementsTable), "PostJobTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.PostJobTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_PostJobTable_JobStatusTable", "JobStatusTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.JobStatusTable), "PostJobTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.PostJobTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_PostJobTable_UserTable", "UserTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.UserTable), "PostJobTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.PostJobTable), true)]
[assembly: EdmRelationshipAttribute("JobFindModel", "FK_UserTypeTable_UserTable", "UserTypeTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DatabaseLayer.UserTypeTable), "UserTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DatabaseLayer.UserTable), true)]

#endregion

namespace DatabaseLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class JobFindEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new JobFindEntities object using the connection string found in the 'JobFindEntities' section of the application configuration file.
        /// </summary>
        public JobFindEntities() : base("name=JobFindEntities", "JobFindEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new JobFindEntities object.
        /// </summary>
        public JobFindEntities(string connectionString) : base(connectionString, "JobFindEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new JobFindEntities object.
        /// </summary>
        public JobFindEntities(EntityConnection connection) : base(connection, "JobFindEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountStatusTable> AccountStatusTables
        {
            get
            {
                if ((_AccountStatusTables == null))
                {
                    _AccountStatusTables = base.CreateObjectSet<AccountStatusTable>("AccountStatusTables");
                }
                return _AccountStatusTables;
            }
        }
        private ObjectSet<AccountStatusTable> _AccountStatusTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CertificateTable> CertificateTables
        {
            get
            {
                if ((_CertificateTables == null))
                {
                    _CertificateTables = base.CreateObjectSet<CertificateTable>("CertificateTables");
                }
                return _CertificateTables;
            }
        }
        private ObjectSet<CertificateTable> _CertificateTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyTable> CompanyTables
        {
            get
            {
                if ((_CompanyTables == null))
                {
                    _CompanyTables = base.CreateObjectSet<CompanyTable>("CompanyTables");
                }
                return _CompanyTables;
            }
        }
        private ObjectSet<CompanyTable> _CompanyTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CountryTable> CountryTables
        {
            get
            {
                if ((_CountryTables == null))
                {
                    _CountryTables = base.CreateObjectSet<CountryTable>("CountryTables");
                }
                return _CountryTables;
            }
        }
        private ObjectSet<CountryTable> _CountryTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CurrentJobStatusTable> CurrentJobStatusTables
        {
            get
            {
                if ((_CurrentJobStatusTables == null))
                {
                    _CurrentJobStatusTables = base.CreateObjectSet<CurrentJobStatusTable>("CurrentJobStatusTables");
                }
                return _CurrentJobStatusTables;
            }
        }
        private ObjectSet<CurrentJobStatusTable> _CurrentJobStatusTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EducationTable> EducationTables
        {
            get
            {
                if ((_EducationTables == null))
                {
                    _EducationTables = base.CreateObjectSet<EducationTable>("EducationTables");
                }
                return _EducationTables;
            }
        }
        private ObjectSet<EducationTable> _EducationTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeTable> EmployeeTables
        {
            get
            {
                if ((_EmployeeTables == null))
                {
                    _EmployeeTables = base.CreateObjectSet<EmployeeTable>("EmployeeTables");
                }
                return _EmployeeTables;
            }
        }
        private ObjectSet<EmployeeTable> _EmployeeTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobApplyStatusTable> JobApplyStatusTables
        {
            get
            {
                if ((_JobApplyStatusTables == null))
                {
                    _JobApplyStatusTables = base.CreateObjectSet<JobApplyStatusTable>("JobApplyStatusTables");
                }
                return _JobApplyStatusTables;
            }
        }
        private ObjectSet<JobApplyStatusTable> _JobApplyStatusTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobApplyTable> JobApplyTables
        {
            get
            {
                if ((_JobApplyTables == null))
                {
                    _JobApplyTables = base.CreateObjectSet<JobApplyTable>("JobApplyTables");
                }
                return _JobApplyTables;
            }
        }
        private ObjectSet<JobApplyTable> _JobApplyTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobCategoryTable> JobCategoryTables
        {
            get
            {
                if ((_JobCategoryTables == null))
                {
                    _JobCategoryTables = base.CreateObjectSet<JobCategoryTable>("JobCategoryTables");
                }
                return _JobCategoryTables;
            }
        }
        private ObjectSet<JobCategoryTable> _JobCategoryTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobNatureTable> JobNatureTables
        {
            get
            {
                if ((_JobNatureTables == null))
                {
                    _JobNatureTables = base.CreateObjectSet<JobNatureTable>("JobNatureTables");
                }
                return _JobNatureTables;
            }
        }
        private ObjectSet<JobNatureTable> _JobNatureTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobRequirementDetailTable> JobRequirementDetailTables
        {
            get
            {
                if ((_JobRequirementDetailTables == null))
                {
                    _JobRequirementDetailTables = base.CreateObjectSet<JobRequirementDetailTable>("JobRequirementDetailTables");
                }
                return _JobRequirementDetailTables;
            }
        }
        private ObjectSet<JobRequirementDetailTable> _JobRequirementDetailTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobRequirementsTable> JobRequirementsTables
        {
            get
            {
                if ((_JobRequirementsTables == null))
                {
                    _JobRequirementsTables = base.CreateObjectSet<JobRequirementsTable>("JobRequirementsTables");
                }
                return _JobRequirementsTables;
            }
        }
        private ObjectSet<JobRequirementsTable> _JobRequirementsTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobStatusTable> JobStatusTables
        {
            get
            {
                if ((_JobStatusTables == null))
                {
                    _JobStatusTables = base.CreateObjectSet<JobStatusTable>("JobStatusTables");
                }
                return _JobStatusTables;
            }
        }
        private ObjectSet<JobStatusTable> _JobStatusTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LanguageTable> LanguageTables
        {
            get
            {
                if ((_LanguageTables == null))
                {
                    _LanguageTables = base.CreateObjectSet<LanguageTable>("LanguageTables");
                }
                return _LanguageTables;
            }
        }
        private ObjectSet<LanguageTable> _LanguageTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PostJobTable> PostJobTables
        {
            get
            {
                if ((_PostJobTables == null))
                {
                    _PostJobTables = base.CreateObjectSet<PostJobTable>("PostJobTables");
                }
                return _PostJobTables;
            }
        }
        private ObjectSet<PostJobTable> _PostJobTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SkillTable> SkillTables
        {
            get
            {
                if ((_SkillTables == null))
                {
                    _SkillTables = base.CreateObjectSet<SkillTable>("SkillTables");
                }
                return _SkillTables;
            }
        }
        private ObjectSet<SkillTable> _SkillTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserTable> UserTables
        {
            get
            {
                if ((_UserTables == null))
                {
                    _UserTables = base.CreateObjectSet<UserTable>("UserTables");
                }
                return _UserTables;
            }
        }
        private ObjectSet<UserTable> _UserTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserTypeTable> UserTypeTables
        {
            get
            {
                if ((_UserTypeTables == null))
                {
                    _UserTypeTables = base.CreateObjectSet<UserTypeTable>("UserTypeTables");
                }
                return _UserTypeTables;
            }
        }
        private ObjectSet<UserTypeTable> _UserTypeTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkExpericenTable> WorkExpericenTables
        {
            get
            {
                if ((_WorkExpericenTables == null))
                {
                    _WorkExpericenTables = base.CreateObjectSet<WorkExpericenTable>("WorkExpericenTables");
                }
                return _WorkExpericenTables;
            }
        }
        private ObjectSet<WorkExpericenTable> _WorkExpericenTables;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountStatusTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountStatusTables(AccountStatusTable accountStatusTable)
        {
            base.AddObject("AccountStatusTables", accountStatusTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CertificateTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCertificateTables(CertificateTable certificateTable)
        {
            base.AddObject("CertificateTables", certificateTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyTables(CompanyTable companyTable)
        {
            base.AddObject("CompanyTables", companyTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CountryTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountryTables(CountryTable countryTable)
        {
            base.AddObject("CountryTables", countryTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CurrentJobStatusTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrentJobStatusTables(CurrentJobStatusTable currentJobStatusTable)
        {
            base.AddObject("CurrentJobStatusTables", currentJobStatusTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EducationTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEducationTables(EducationTable educationTable)
        {
            base.AddObject("EducationTables", educationTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeTables(EmployeeTable employeeTable)
        {
            base.AddObject("EmployeeTables", employeeTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobApplyStatusTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobApplyStatusTables(JobApplyStatusTable jobApplyStatusTable)
        {
            base.AddObject("JobApplyStatusTables", jobApplyStatusTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobApplyTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobApplyTables(JobApplyTable jobApplyTable)
        {
            base.AddObject("JobApplyTables", jobApplyTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobCategoryTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobCategoryTables(JobCategoryTable jobCategoryTable)
        {
            base.AddObject("JobCategoryTables", jobCategoryTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobNatureTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobNatureTables(JobNatureTable jobNatureTable)
        {
            base.AddObject("JobNatureTables", jobNatureTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobRequirementDetailTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobRequirementDetailTables(JobRequirementDetailTable jobRequirementDetailTable)
        {
            base.AddObject("JobRequirementDetailTables", jobRequirementDetailTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobRequirementsTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobRequirementsTables(JobRequirementsTable jobRequirementsTable)
        {
            base.AddObject("JobRequirementsTables", jobRequirementsTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobStatusTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobStatusTables(JobStatusTable jobStatusTable)
        {
            base.AddObject("JobStatusTables", jobStatusTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LanguageTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguageTables(LanguageTable languageTable)
        {
            base.AddObject("LanguageTables", languageTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PostJobTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPostJobTables(PostJobTable postJobTable)
        {
            base.AddObject("PostJobTables", postJobTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SkillTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSkillTables(SkillTable skillTable)
        {
            base.AddObject("SkillTables", skillTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserTables(UserTable userTable)
        {
            base.AddObject("UserTables", userTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserTypeTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserTypeTables(UserTypeTable userTypeTable)
        {
            base.AddObject("UserTypeTables", userTypeTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkExpericenTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkExpericenTables(WorkExpericenTable workExpericenTable)
        {
            base.AddObject("WorkExpericenTables", workExpericenTable);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobFindModel", Name="AccountStatusTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountStatusTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountStatusTable object.
        /// </summary>
        /// <param name="accountStatusID">Initial value of the AccountStatusID property.</param>
        /// <param name="accountStatus">Initial value of the AccountStatus property.</param>
        public static AccountStatusTable CreateAccountStatusTable(global::System.Int32 accountStatusID, global::System.String accountStatus)
        {
            AccountStatusTable accountStatusTable = new AccountStatusTable();
            accountStatusTable.AccountStatusID = accountStatusID;
            accountStatusTable.AccountStatus = accountStatus;
            return accountStatusTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountStatusID
        {
            get
            {
                return _AccountStatusID;
            }
            set
            {
                if (_AccountStatusID != value)
                {
                    OnAccountStatusIDChanging(value);
                    ReportPropertyChanging("AccountStatusID");
                    _AccountStatusID = StructuralObject.SetValidValue(value, "AccountStatusID");
                    ReportPropertyChanged("AccountStatusID");
                    OnAccountStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountStatusID;
        partial void OnAccountStatusIDChanging(global::System.Int32 value);
        partial void OnAccountStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountStatus
        {
            get
            {
                return _AccountStatus;
            }
            set
            {
                OnAccountStatusChanging(value);
                ReportPropertyChanging("AccountStatus");
                _AccountStatus = StructuralObject.SetValidValue(value, false, "AccountStatus");
                ReportPropertyChanged("AccountStatus");
                OnAccountStatusChanged();
            }
        }
        private global::System.String _AccountStatus;
        partial void OnAccountStatusChanging(global::System.String value);
        partial void OnAccountStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_UserTable_AccountStatusTable", "UserTable")]
        public EntityCollection<UserTable> UserTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserTable>("JobFindModel.FK_UserTable_AccountStatusTable", "UserTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserTable>("JobFindModel.FK_UserTable_AccountStatusTable", "UserTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobFindModel", Name="CertificateTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CertificateTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CertificateTable object.
        /// </summary>
        /// <param name="certificateID">Initial value of the CertificateID property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="certificateName">Initial value of the CertificateName property.</param>
        /// <param name="certificateAuthority">Initial value of the CertificateAuthority property.</param>
        /// <param name="levelCertification">Initial value of the LevelCertification property.</param>
        /// <param name="fromYear">Initial value of the FromYear property.</param>
        public static CertificateTable CreateCertificateTable(global::System.Int32 certificateID, global::System.Int32 employeeID, global::System.String certificateName, global::System.String certificateAuthority, global::System.String levelCertification, global::System.DateTime fromYear)
        {
            CertificateTable certificateTable = new CertificateTable();
            certificateTable.CertificateID = certificateID;
            certificateTable.EmployeeID = employeeID;
            certificateTable.CertificateName = certificateName;
            certificateTable.CertificateAuthority = certificateAuthority;
            certificateTable.LevelCertification = levelCertification;
            certificateTable.FromYear = fromYear;
            return certificateTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CertificateID
        {
            get
            {
                return _CertificateID;
            }
            set
            {
                if (_CertificateID != value)
                {
                    OnCertificateIDChanging(value);
                    ReportPropertyChanging("CertificateID");
                    _CertificateID = StructuralObject.SetValidValue(value, "CertificateID");
                    ReportPropertyChanged("CertificateID");
                    OnCertificateIDChanged();
                }
            }
        }
        private global::System.Int32 _CertificateID;
        partial void OnCertificateIDChanging(global::System.Int32 value);
        partial void OnCertificateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value, "EmployeeID");
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CertificateName
        {
            get
            {
                return _CertificateName;
            }
            set
            {
                OnCertificateNameChanging(value);
                ReportPropertyChanging("CertificateName");
                _CertificateName = StructuralObject.SetValidValue(value, false, "CertificateName");
                ReportPropertyChanged("CertificateName");
                OnCertificateNameChanged();
            }
        }
        private global::System.String _CertificateName;
        partial void OnCertificateNameChanging(global::System.String value);
        partial void OnCertificateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CertificateAuthority
        {
            get
            {
                return _CertificateAuthority;
            }
            set
            {
                OnCertificateAuthorityChanging(value);
                ReportPropertyChanging("CertificateAuthority");
                _CertificateAuthority = StructuralObject.SetValidValue(value, false, "CertificateAuthority");
                ReportPropertyChanged("CertificateAuthority");
                OnCertificateAuthorityChanged();
            }
        }
        private global::System.String _CertificateAuthority;
        partial void OnCertificateAuthorityChanging(global::System.String value);
        partial void OnCertificateAuthorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LevelCertification
        {
            get
            {
                return _LevelCertification;
            }
            set
            {
                OnLevelCertificationChanging(value);
                ReportPropertyChanging("LevelCertification");
                _LevelCertification = StructuralObject.SetValidValue(value, false, "LevelCertification");
                ReportPropertyChanged("LevelCertification");
                OnLevelCertificationChanged();
            }
        }
        private global::System.String _LevelCertification;
        partial void OnLevelCertificationChanging(global::System.String value);
        partial void OnLevelCertificationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FromYear
        {
            get
            {
                return _FromYear;
            }
            set
            {
                OnFromYearChanging(value);
                ReportPropertyChanging("FromYear");
                _FromYear = StructuralObject.SetValidValue(value, "FromYear");
                ReportPropertyChanged("FromYear");
                OnFromYearChanged();
            }
        }
        private global::System.DateTime _FromYear;
        partial void OnFromYearChanging(global::System.DateTime value);
        partial void OnFromYearChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_CertificateTable_EmployeeTable", "EmployeeTable")]
        public EmployeeTable EmployeeTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("JobFindModel.FK_CertificateTable_EmployeeTable", "EmployeeTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("JobFindModel.FK_CertificateTable_EmployeeTable", "EmployeeTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeTable> EmployeeTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("JobFindModel.FK_CertificateTable_EmployeeTable", "EmployeeTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeTable>("JobFindModel.FK_CertificateTable_EmployeeTable", "EmployeeTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobFindModel", Name="CompanyTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyTable object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        /// <param name="contactNo">Initial value of the ContactNo property.</param>
        /// <param name="phoneNo">Initial value of the PhoneNo property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        /// <param name="logo">Initial value of the Logo property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static CompanyTable CreateCompanyTable(global::System.Int32 companyID, global::System.Int32 userID, global::System.String companyName, global::System.String contactNo, global::System.String phoneNo, global::System.String emailAddress, global::System.String logo, global::System.String description)
        {
            CompanyTable companyTable = new CompanyTable();
            companyTable.CompanyID = companyID;
            companyTable.UserID = userID;
            companyTable.CompanyName = companyName;
            companyTable.ContactNo = contactNo;
            companyTable.PhoneNo = phoneNo;
            companyTable.EmailAddress = emailAddress;
            companyTable.Logo = logo;
            companyTable.Description = description;
            return companyTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value, "CompanyID");
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactNo
        {
            get
            {
                return _ContactNo;
            }
            set
            {
                OnContactNoChanging(value);
                ReportPropertyChanging("ContactNo");
                _ContactNo = StructuralObject.SetValidValue(value, false, "ContactNo");
                ReportPropertyChanged("ContactNo");
                OnContactNoChanged();
            }
        }
        private global::System.String _ContactNo;
        partial void OnContactNoChanging(global::System.String value);
        partial void OnContactNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNo
        {
            get
            {
                return _PhoneNo;
            }
            set
            {
                OnPhoneNoChanging(value);
                ReportPropertyChanging("PhoneNo");
                _PhoneNo = StructuralObject.SetValidValue(value, false, "PhoneNo");
                ReportPropertyChanged("PhoneNo");
                OnPhoneNoChanged();
            }
        }
        private global::System.String _PhoneNo;
        partial void OnPhoneNoChanging(global::System.String value);
        partial void OnPhoneNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false, "EmailAddress");
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Logo
        {
            get
            {
                return _Logo;
            }
            set
            {
                OnLogoChanging(value);
                ReportPropertyChanging("Logo");
                _Logo = StructuralObject.SetValidValue(value, false, "Logo");
                ReportPropertyChanged("Logo");
                OnLogoChanged();
            }
        }
        private global::System.String _Logo;
        partial void OnLogoChanging(global::System.String value);
        partial void OnLogoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_CompanyTable_UserTable", "UserTable")]
        public UserTable UserTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserTable>("JobFindModel.FK_CompanyTable_UserTable", "UserTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserTable>("JobFindModel.FK_CompanyTable_UserTable", "UserTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserTable> UserTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserTable>("JobFindModel.FK_CompanyTable_UserTable", "UserTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserTable>("JobFindModel.FK_CompanyTable_UserTable", "UserTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_PostJobTable_CompanyTable", "PostJobTable")]
        public EntityCollection<PostJobTable> PostJobTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PostJobTable>("JobFindModel.FK_PostJobTable_CompanyTable", "PostJobTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PostJobTable>("JobFindModel.FK_PostJobTable_CompanyTable", "PostJobTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobFindModel", Name="CountryTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CountryTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CountryTable object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        public static CountryTable CreateCountryTable(global::System.Int32 countryID, global::System.String country)
        {
            CountryTable countryTable = new CountryTable();
            countryTable.CountryID = countryID;
            countryTable.Country = country;
            return countryTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value, "CountryID");
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false, "Country");
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_EducationTable_CountryTable", "EducationTable")]
        public EntityCollection<EducationTable> EducationTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EducationTable>("JobFindModel.FK_EducationTable_CountryTable", "EducationTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EducationTable>("JobFindModel.FK_EducationTable_CountryTable", "EducationTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_EmployeeTable_CountryTable", "EmployeeTable")]
        public EntityCollection<EmployeeTable> EmployeeTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeTable>("JobFindModel.FK_EmployeeTable_CountryTable", "EmployeeTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeTable>("JobFindModel.FK_EmployeeTable_CountryTable", "EmployeeTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_WorkExpericenTable_CountryTable", "WorkExpericenTable")]
        public EntityCollection<WorkExpericenTable> WorkExpericenTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkExpericenTable>("JobFindModel.FK_WorkExpericenTable_CountryTable", "WorkExpericenTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkExpericenTable>("JobFindModel.FK_WorkExpericenTable_CountryTable", "WorkExpericenTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobFindModel", Name="CurrentJobStatusTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CurrentJobStatusTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CurrentJobStatusTable object.
        /// </summary>
        /// <param name="currentJobStatusID">Initial value of the CurrentJobStatusID property.</param>
        public static CurrentJobStatusTable CreateCurrentJobStatusTable(global::System.Int32 currentJobStatusID)
        {
            CurrentJobStatusTable currentJobStatusTable = new CurrentJobStatusTable();
            currentJobStatusTable.CurrentJobStatusID = currentJobStatusID;
            return currentJobStatusTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrentJobStatusID
        {
            get
            {
                return _CurrentJobStatusID;
            }
            set
            {
                if (_CurrentJobStatusID != value)
                {
                    OnCurrentJobStatusIDChanging(value);
                    ReportPropertyChanging("CurrentJobStatusID");
                    _CurrentJobStatusID = StructuralObject.SetValidValue(value, "CurrentJobStatusID");
                    ReportPropertyChanged("CurrentJobStatusID");
                    OnCurrentJobStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _CurrentJobStatusID;
        partial void OnCurrentJobStatusIDChanging(global::System.Int32 value);
        partial void OnCurrentJobStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrentJobStatus
        {
            get
            {
                return _CurrentJobStatus;
            }
            set
            {
                OnCurrentJobStatusChanging(value);
                ReportPropertyChanging("CurrentJobStatus");
                _CurrentJobStatus = StructuralObject.SetValidValue(value, true, "CurrentJobStatus");
                ReportPropertyChanged("CurrentJobStatus");
                OnCurrentJobStatusChanged();
            }
        }
        private global::System.String _CurrentJobStatus;
        partial void OnCurrentJobStatusChanging(global::System.String value);
        partial void OnCurrentJobStatusChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobFindModel", Name="EducationTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EducationTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EducationTable object.
        /// </summary>
        /// <param name="educationID">Initial value of the EducationID property.</param>
        /// <param name="institudeName">Initial value of the InstitudeName property.</param>
        /// <param name="titileOfEducation">Initial value of the TitileOfEducation property.</param>
        /// <param name="degree">Initial value of the Degree property.</param>
        /// <param name="fromYear">Initial value of the FromYear property.</param>
        /// <param name="toYear">Initial value of the ToYear property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        public static EducationTable CreateEducationTable(global::System.Int32 educationID, global::System.String institudeName, global::System.String titileOfEducation, global::System.String degree, global::System.DateTime fromYear, global::System.DateTime toYear, global::System.String city, global::System.Int32 countryID, global::System.Int32 employeeID)
        {
            EducationTable educationTable = new EducationTable();
            educationTable.EducationID = educationID;
            educationTable.InstitudeName = institudeName;
            educationTable.TitileOfEducation = titileOfEducation;
            educationTable.Degree = degree;
            educationTable.FromYear = fromYear;
            educationTable.ToYear = toYear;
            educationTable.City = city;
            educationTable.CountryID = countryID;
            educationTable.EmployeeID = employeeID;
            return educationTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EducationID
        {
            get
            {
                return _EducationID;
            }
            set
            {
                if (_EducationID != value)
                {
                    OnEducationIDChanging(value);
                    ReportPropertyChanging("EducationID");
                    _EducationID = StructuralObject.SetValidValue(value, "EducationID");
                    ReportPropertyChanged("EducationID");
                    OnEducationIDChanged();
                }
            }
        }
        private global::System.Int32 _EducationID;
        partial void OnEducationIDChanging(global::System.Int32 value);
        partial void OnEducationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstitudeName
        {
            get
            {
                return _InstitudeName;
            }
            set
            {
                OnInstitudeNameChanging(value);
                ReportPropertyChanging("InstitudeName");
                _InstitudeName = StructuralObject.SetValidValue(value, false, "InstitudeName");
                ReportPropertyChanged("InstitudeName");
                OnInstitudeNameChanged();
            }
        }
        private global::System.String _InstitudeName;
        partial void OnInstitudeNameChanging(global::System.String value);
        partial void OnInstitudeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TitileOfEducation
        {
            get
            {
                return _TitileOfEducation;
            }
            set
            {
                OnTitileOfEducationChanging(value);
                ReportPropertyChanging("TitileOfEducation");
                _TitileOfEducation = StructuralObject.SetValidValue(value, false, "TitileOfEducation");
                ReportPropertyChanged("TitileOfEducation");
                OnTitileOfEducationChanged();
            }
        }
        private global::System.String _TitileOfEducation;
        partial void OnTitileOfEducationChanging(global::System.String value);
        partial void OnTitileOfEducationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Degree
        {
            get
            {
                return _Degree;
            }
            set
            {
                OnDegreeChanging(value);
                ReportPropertyChanging("Degree");
                _Degree = StructuralObject.SetValidValue(value, false, "Degree");
                ReportPropertyChanged("Degree");
                OnDegreeChanged();
            }
        }
        private global::System.String _Degree;
        partial void OnDegreeChanging(global::System.String value);
        partial void OnDegreeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FromYear
        {
            get
            {
                return _FromYear;
            }
            set
            {
                OnFromYearChanging(value);
                ReportPropertyChanging("FromYear");
                _FromYear = StructuralObject.SetValidValue(value, "FromYear");
                ReportPropertyChanged("FromYear");
                OnFromYearChanged();
            }
        }
        private global::System.DateTime _FromYear;
        partial void OnFromYearChanging(global::System.DateTime value);
        partial void OnFromYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ToYear
        {
            get
            {
                return _ToYear;
            }
            set
            {
                OnToYearChanging(value);
                ReportPropertyChanging("ToYear");
                _ToYear = StructuralObject.SetValidValue(value, "ToYear");
                ReportPropertyChanged("ToYear");
                OnToYearChanged();
            }
        }
        private global::System.DateTime _ToYear;
        partial void OnToYearChanging(global::System.DateTime value);
        partial void OnToYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, "CountryID");
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value, "EmployeeID");
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_EducationTable_CountryTable", "CountryTable")]
        public CountryTable CountryTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryTable>("JobFindModel.FK_EducationTable_CountryTable", "CountryTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryTable>("JobFindModel.FK_EducationTable_CountryTable", "CountryTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CountryTable> CountryTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryTable>("JobFindModel.FK_EducationTable_CountryTable", "CountryTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CountryTable>("JobFindModel.FK_EducationTable_CountryTable", "CountryTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_EducationTable_EmployeeTable", "EmployeeTable")]
        public EmployeeTable EmployeeTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("JobFindModel.FK_EducationTable_EmployeeTable", "EmployeeTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("JobFindModel.FK_EducationTable_EmployeeTable", "EmployeeTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeTable> EmployeeTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("JobFindModel.FK_EducationTable_EmployeeTable", "EmployeeTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeTable>("JobFindModel.FK_EducationTable_EmployeeTable", "EmployeeTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobFindModel", Name="EmployeeTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeTable object.
        /// </summary>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="jobCategoryID">Initial value of the JobCategoryID property.</param>
        /// <param name="employeeName">Initial value of the EmployeeName property.</param>
        /// <param name="dOB">Initial value of the DOB property.</param>
        /// <param name="cNIC">Initial value of the CNIC property.</param>
        /// <param name="fNIC_">Initial value of the FNIC_ property.</param>
        /// <param name="fatherName">Initial value of the FatherName property.</param>
        /// <param name="nationality">Initial value of the Nationality property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        /// <param name="photo">Initial value of the Photo property.</param>
        /// <param name="qualification">Initial value of the Qualification property.</param>
        /// <param name="permanentAddress">Initial value of the PermanentAddress property.</param>
        public static EmployeeTable CreateEmployeeTable(global::System.Int32 employeeID, global::System.Int32 userID, global::System.Int32 jobCategoryID, global::System.String employeeName, global::System.DateTime dOB, global::System.String cNIC, global::System.String fNIC_, global::System.String fatherName, global::System.String nationality, global::System.Int32 countryID, global::System.String emailAddress, global::System.String gender, global::System.String photo, global::System.String qualification, global::System.String permanentAddress)
        {
            EmployeeTable employeeTable = new EmployeeTable();
            employeeTable.EmployeeID = employeeID;
            employeeTable.UserID = userID;
            employeeTable.JobCategoryID = jobCategoryID;
            employeeTable.EmployeeName = employeeName;
            employeeTable.DOB = dOB;
            employeeTable.CNIC = cNIC;
            employeeTable.FNIC_ = fNIC_;
            employeeTable.FatherName = fatherName;
            employeeTable.Nationality = nationality;
            employeeTable.CountryID = countryID;
            employeeTable.EmailAddress = emailAddress;
            employeeTable.Gender = gender;
            employeeTable.Photo = photo;
            employeeTable.Qualification = qualification;
            employeeTable.PermanentAddress = permanentAddress;
            return employeeTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                if (_EmployeeID != value)
                {
                    OnEmployeeIDChanging(value);
                    ReportPropertyChanging("EmployeeID");
                    _EmployeeID = StructuralObject.SetValidValue(value, "EmployeeID");
                    ReportPropertyChanged("EmployeeID");
                    OnEmployeeIDChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobCategoryID
        {
            get
            {
                return _JobCategoryID;
            }
            set
            {
                OnJobCategoryIDChanging(value);
                ReportPropertyChanging("JobCategoryID");
                _JobCategoryID = StructuralObject.SetValidValue(value, "JobCategoryID");
                ReportPropertyChanged("JobCategoryID");
                OnJobCategoryIDChanged();
            }
        }
        private global::System.Int32 _JobCategoryID;
        partial void OnJobCategoryIDChanging(global::System.Int32 value);
        partial void OnJobCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeName
        {
            get
            {
                return _EmployeeName;
            }
            set
            {
                OnEmployeeNameChanging(value);
                ReportPropertyChanging("EmployeeName");
                _EmployeeName = StructuralObject.SetValidValue(value, false, "EmployeeName");
                ReportPropertyChanged("EmployeeName");
                OnEmployeeNameChanged();
            }
        }
        private global::System.String _EmployeeName;
        partial void OnEmployeeNameChanging(global::System.String value);
        partial void OnEmployeeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DOB
        {
            get
            {
                return _DOB;
            }
            set
            {
                OnDOBChanging(value);
                ReportPropertyChanging("DOB");
                _DOB = StructuralObject.SetValidValue(value, "DOB");
                ReportPropertyChanged("DOB");
                OnDOBChanged();
            }
        }
        private global::System.DateTime _DOB;
        partial void OnDOBChanging(global::System.DateTime value);
        partial void OnDOBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CNIC
        {
            get
            {
                return _CNIC;
            }
            set
            {
                OnCNICChanging(value);
                ReportPropertyChanging("CNIC");
                _CNIC = StructuralObject.SetValidValue(value, false, "CNIC");
                ReportPropertyChanged("CNIC");
                OnCNICChanged();
            }
        }
        private global::System.String _CNIC;
        partial void OnCNICChanging(global::System.String value);
        partial void OnCNICChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FNIC_
        {
            get
            {
                return _FNIC_;
            }
            set
            {
                OnFNIC_Changing(value);
                ReportPropertyChanging("FNIC_");
                _FNIC_ = StructuralObject.SetValidValue(value, false, "FNIC_");
                ReportPropertyChanged("FNIC_");
                OnFNIC_Changed();
            }
        }
        private global::System.String _FNIC_;
        partial void OnFNIC_Changing(global::System.String value);
        partial void OnFNIC_Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FatherName
        {
            get
            {
                return _FatherName;
            }
            set
            {
                OnFatherNameChanging(value);
                ReportPropertyChanging("FatherName");
                _FatherName = StructuralObject.SetValidValue(value, false, "FatherName");
                ReportPropertyChanged("FatherName");
                OnFatherNameChanged();
            }
        }
        private global::System.String _FatherName;
        partial void OnFatherNameChanging(global::System.String value);
        partial void OnFatherNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nationality
        {
            get
            {
                return _Nationality;
            }
            set
            {
                OnNationalityChanging(value);
                ReportPropertyChanging("Nationality");
                _Nationality = StructuralObject.SetValidValue(value, false, "Nationality");
                ReportPropertyChanged("Nationality");
                OnNationalityChanged();
            }
        }
        private global::System.String _Nationality;
        partial void OnNationalityChanging(global::System.String value);
        partial void OnNationalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, "CountryID");
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false, "EmailAddress");
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, false, "Gender");
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Photo
        {
            get
            {
                return _Photo;
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, false, "Photo");
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.String _Photo;
        partial void OnPhotoChanging(global::System.String value);
        partial void OnPhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Qualification
        {
            get
            {
                return _Qualification;
            }
            set
            {
                OnQualificationChanging(value);
                ReportPropertyChanging("Qualification");
                _Qualification = StructuralObject.SetValidValue(value, false, "Qualification");
                ReportPropertyChanged("Qualification");
                OnQualificationChanged();
            }
        }
        private global::System.String _Qualification;
        partial void OnQualificationChanging(global::System.String value);
        partial void OnQualificationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PermanentAddress
        {
            get
            {
                return _PermanentAddress;
            }
            set
            {
                OnPermanentAddressChanging(value);
                ReportPropertyChanging("PermanentAddress");
                _PermanentAddress = StructuralObject.SetValidValue(value, false, "PermanentAddress");
                ReportPropertyChanged("PermanentAddress");
                OnPermanentAddressChanged();
            }
        }
        private global::System.String _PermanentAddress;
        partial void OnPermanentAddressChanging(global::System.String value);
        partial void OnPermanentAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobReferences
        {
            get
            {
                return _JobReferences;
            }
            set
            {
                OnJobReferencesChanging(value);
                ReportPropertyChanging("JobReferences");
                _JobReferences = StructuralObject.SetValidValue(value, true, "JobReferences");
                ReportPropertyChanged("JobReferences");
                OnJobReferencesChanged();
            }
        }
        private global::System.String _JobReferences;
        partial void OnJobReferencesChanging(global::System.String value);
        partial void OnJobReferencesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_CertificateTable_EmployeeTable", "CertificateTable")]
        public EntityCollection<CertificateTable> CertificateTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CertificateTable>("JobFindModel.FK_CertificateTable_EmployeeTable", "CertificateTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CertificateTable>("JobFindModel.FK_CertificateTable_EmployeeTable", "CertificateTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_EmployeeTable_CountryTable", "CountryTable")]
        public CountryTable CountryTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryTable>("JobFindModel.FK_EmployeeTable_CountryTable", "CountryTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryTable>("JobFindModel.FK_EmployeeTable_CountryTable", "CountryTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CountryTable> CountryTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryTable>("JobFindModel.FK_EmployeeTable_CountryTable", "CountryTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CountryTable>("JobFindModel.FK_EmployeeTable_CountryTable", "CountryTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_EducationTable_EmployeeTable", "EducationTable")]
        public EntityCollection<EducationTable> EducationTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EducationTable>("JobFindModel.FK_EducationTable_EmployeeTable", "EducationTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EducationTable>("JobFindModel.FK_EducationTable_EmployeeTable", "EducationTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_EmployeeTable_JobCategoryTable", "JobCategoryTable")]
        public JobCategoryTable JobCategoryTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobCategoryTable>("JobFindModel.FK_EmployeeTable_JobCategoryTable", "JobCategoryTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobCategoryTable>("JobFindModel.FK_EmployeeTable_JobCategoryTable", "JobCategoryTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobCategoryTable> JobCategoryTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobCategoryTable>("JobFindModel.FK_EmployeeTable_JobCategoryTable", "JobCategoryTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobCategoryTable>("JobFindModel.FK_EmployeeTable_JobCategoryTable", "JobCategoryTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_EmployeeTable_UserTable", "UserTable")]
        public UserTable UserTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserTable>("JobFindModel.FK_EmployeeTable_UserTable", "UserTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserTable>("JobFindModel.FK_EmployeeTable_UserTable", "UserTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserTable> UserTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserTable>("JobFindModel.FK_EmployeeTable_UserTable", "UserTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserTable>("JobFindModel.FK_EmployeeTable_UserTable", "UserTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_JobApplyTable_EmployeeTable", "JobApplyTable")]
        public EntityCollection<JobApplyTable> JobApplyTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobApplyTable>("JobFindModel.FK_JobApplyTable_EmployeeTable", "JobApplyTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobApplyTable>("JobFindModel.FK_JobApplyTable_EmployeeTable", "JobApplyTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_LanguageTable_EmployeeTable", "LanguageTable")]
        public EntityCollection<LanguageTable> LanguageTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LanguageTable>("JobFindModel.FK_LanguageTable_EmployeeTable", "LanguageTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LanguageTable>("JobFindModel.FK_LanguageTable_EmployeeTable", "LanguageTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_SkillTable_EmployeeTable", "SkillTable")]
        public EntityCollection<SkillTable> SkillTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SkillTable>("JobFindModel.FK_SkillTable_EmployeeTable", "SkillTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SkillTable>("JobFindModel.FK_SkillTable_EmployeeTable", "SkillTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobFindModel", Name="JobApplyStatusTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobApplyStatusTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobApplyStatusTable object.
        /// </summary>
        /// <param name="jobApplyStatusID">Initial value of the JobApplyStatusID property.</param>
        /// <param name="jobApplyStatus">Initial value of the JobApplyStatus property.</param>
        public static JobApplyStatusTable CreateJobApplyStatusTable(global::System.Int32 jobApplyStatusID, global::System.String jobApplyStatus)
        {
            JobApplyStatusTable jobApplyStatusTable = new JobApplyStatusTable();
            jobApplyStatusTable.JobApplyStatusID = jobApplyStatusID;
            jobApplyStatusTable.JobApplyStatus = jobApplyStatus;
            return jobApplyStatusTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobApplyStatusID
        {
            get
            {
                return _JobApplyStatusID;
            }
            set
            {
                if (_JobApplyStatusID != value)
                {
                    OnJobApplyStatusIDChanging(value);
                    ReportPropertyChanging("JobApplyStatusID");
                    _JobApplyStatusID = StructuralObject.SetValidValue(value, "JobApplyStatusID");
                    ReportPropertyChanged("JobApplyStatusID");
                    OnJobApplyStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _JobApplyStatusID;
        partial void OnJobApplyStatusIDChanging(global::System.Int32 value);
        partial void OnJobApplyStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JobApplyStatus
        {
            get
            {
                return _JobApplyStatus;
            }
            set
            {
                OnJobApplyStatusChanging(value);
                ReportPropertyChanging("JobApplyStatus");
                _JobApplyStatus = StructuralObject.SetValidValue(value, false, "JobApplyStatus");
                ReportPropertyChanged("JobApplyStatus");
                OnJobApplyStatusChanged();
            }
        }
        private global::System.String _JobApplyStatus;
        partial void OnJobApplyStatusChanging(global::System.String value);
        partial void OnJobApplyStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_JobApplyTable_JobApplyStatusTable", "JobApplyTable")]
        public EntityCollection<JobApplyTable> JobApplyTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobApplyTable>("JobFindModel.FK_JobApplyTable_JobApplyStatusTable", "JobApplyTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobApplyTable>("JobFindModel.FK_JobApplyTable_JobApplyStatusTable", "JobApplyTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobFindModel", Name="JobApplyTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobApplyTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobApplyTable object.
        /// </summary>
        /// <param name="jobApplyID">Initial value of the JobApplyID property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="jobApplyDateTime">Initial value of the JobApplyDateTime property.</param>
        /// <param name="jobApplyStatusID">Initial value of the JobApplyStatusID property.</param>
        /// <param name="jobApplyStatusUpdateDate">Initial value of the JobApplyStatusUpdateDate property.</param>
        /// <param name="jobApplyStatusUpdateReason">Initial value of the JobApplyStatusUpdateReason property.</param>
        /// <param name="postJobId">Initial value of the PostJobId property.</param>
        public static JobApplyTable CreateJobApplyTable(global::System.Int32 jobApplyID, global::System.Int32 employeeID, global::System.DateTime jobApplyDateTime, global::System.Int32 jobApplyStatusID, global::System.DateTime jobApplyStatusUpdateDate, global::System.String jobApplyStatusUpdateReason, global::System.Int32 postJobId)
        {
            JobApplyTable jobApplyTable = new JobApplyTable();
            jobApplyTable.JobApplyID = jobApplyID;
            jobApplyTable.EmployeeID = employeeID;
            jobApplyTable.JobApplyDateTime = jobApplyDateTime;
            jobApplyTable.JobApplyStatusID = jobApplyStatusID;
            jobApplyTable.JobApplyStatusUpdateDate = jobApplyStatusUpdateDate;
            jobApplyTable.JobApplyStatusUpdateReason = jobApplyStatusUpdateReason;
            jobApplyTable.PostJobId = postJobId;
            return jobApplyTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobApplyID
        {
            get
            {
                return _JobApplyID;
            }
            set
            {
                if (_JobApplyID != value)
                {
                    OnJobApplyIDChanging(value);
                    ReportPropertyChanging("JobApplyID");
                    _JobApplyID = StructuralObject.SetValidValue(value, "JobApplyID");
                    ReportPropertyChanged("JobApplyID");
                    OnJobApplyIDChanged();
                }
            }
        }
        private global::System.Int32 _JobApplyID;
        partial void OnJobApplyIDChanging(global::System.Int32 value);
        partial void OnJobApplyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value, "EmployeeID");
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime JobApplyDateTime
        {
            get
            {
                return _JobApplyDateTime;
            }
            set
            {
                OnJobApplyDateTimeChanging(value);
                ReportPropertyChanging("JobApplyDateTime");
                _JobApplyDateTime = StructuralObject.SetValidValue(value, "JobApplyDateTime");
                ReportPropertyChanged("JobApplyDateTime");
                OnJobApplyDateTimeChanged();
            }
        }
        private global::System.DateTime _JobApplyDateTime;
        partial void OnJobApplyDateTimeChanging(global::System.DateTime value);
        partial void OnJobApplyDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobApplyStatusID
        {
            get
            {
                return _JobApplyStatusID;
            }
            set
            {
                OnJobApplyStatusIDChanging(value);
                ReportPropertyChanging("JobApplyStatusID");
                _JobApplyStatusID = StructuralObject.SetValidValue(value, "JobApplyStatusID");
                ReportPropertyChanged("JobApplyStatusID");
                OnJobApplyStatusIDChanged();
            }
        }
        private global::System.Int32 _JobApplyStatusID;
        partial void OnJobApplyStatusIDChanging(global::System.Int32 value);
        partial void OnJobApplyStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime JobApplyStatusUpdateDate
        {
            get
            {
                return _JobApplyStatusUpdateDate;
            }
            set
            {
                OnJobApplyStatusUpdateDateChanging(value);
                ReportPropertyChanging("JobApplyStatusUpdateDate");
                _JobApplyStatusUpdateDate = StructuralObject.SetValidValue(value, "JobApplyStatusUpdateDate");
                ReportPropertyChanged("JobApplyStatusUpdateDate");
                OnJobApplyStatusUpdateDateChanged();
            }
        }
        private global::System.DateTime _JobApplyStatusUpdateDate;
        partial void OnJobApplyStatusUpdateDateChanging(global::System.DateTime value);
        partial void OnJobApplyStatusUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JobApplyStatusUpdateReason
        {
            get
            {
                return _JobApplyStatusUpdateReason;
            }
            set
            {
                OnJobApplyStatusUpdateReasonChanging(value);
                ReportPropertyChanging("JobApplyStatusUpdateReason");
                _JobApplyStatusUpdateReason = StructuralObject.SetValidValue(value, false, "JobApplyStatusUpdateReason");
                ReportPropertyChanged("JobApplyStatusUpdateReason");
                OnJobApplyStatusUpdateReasonChanged();
            }
        }
        private global::System.String _JobApplyStatusUpdateReason;
        partial void OnJobApplyStatusUpdateReasonChanging(global::System.String value);
        partial void OnJobApplyStatusUpdateReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostJobId
        {
            get
            {
                return _PostJobId;
            }
            set
            {
                OnPostJobIdChanging(value);
                ReportPropertyChanging("PostJobId");
                _PostJobId = StructuralObject.SetValidValue(value, "PostJobId");
                ReportPropertyChanged("PostJobId");
                OnPostJobIdChanged();
            }
        }
        private global::System.Int32 _PostJobId;
        partial void OnPostJobIdChanging(global::System.Int32 value);
        partial void OnPostJobIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_JobApplyTable_EmployeeTable", "EmployeeTable")]
        public EmployeeTable EmployeeTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("JobFindModel.FK_JobApplyTable_EmployeeTable", "EmployeeTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("JobFindModel.FK_JobApplyTable_EmployeeTable", "EmployeeTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeTable> EmployeeTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("JobFindModel.FK_JobApplyTable_EmployeeTable", "EmployeeTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeTable>("JobFindModel.FK_JobApplyTable_EmployeeTable", "EmployeeTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_JobApplyTable_JobApplyStatusTable", "JobApplyStatusTable")]
        public JobApplyStatusTable JobApplyStatusTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobApplyStatusTable>("JobFindModel.FK_JobApplyTable_JobApplyStatusTable", "JobApplyStatusTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobApplyStatusTable>("JobFindModel.FK_JobApplyTable_JobApplyStatusTable", "JobApplyStatusTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobApplyStatusTable> JobApplyStatusTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobApplyStatusTable>("JobFindModel.FK_JobApplyTable_JobApplyStatusTable", "JobApplyStatusTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobApplyStatusTable>("JobFindModel.FK_JobApplyTable_JobApplyStatusTable", "JobApplyStatusTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_JobApplyTable_PostJobTable", "PostJobTable")]
        public PostJobTable PostJobTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostJobTable>("JobFindModel.FK_JobApplyTable_PostJobTable", "PostJobTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostJobTable>("JobFindModel.FK_JobApplyTable_PostJobTable", "PostJobTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PostJobTable> PostJobTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostJobTable>("JobFindModel.FK_JobApplyTable_PostJobTable", "PostJobTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PostJobTable>("JobFindModel.FK_JobApplyTable_PostJobTable", "PostJobTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobFindModel", Name="JobCategoryTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobCategoryTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobCategoryTable object.
        /// </summary>
        /// <param name="jobCategoryID">Initial value of the JobCategoryID property.</param>
        /// <param name="jobCategory">Initial value of the JobCategory property.</param>
        public static JobCategoryTable CreateJobCategoryTable(global::System.Int32 jobCategoryID, global::System.String jobCategory)
        {
            JobCategoryTable jobCategoryTable = new JobCategoryTable();
            jobCategoryTable.JobCategoryID = jobCategoryID;
            jobCategoryTable.JobCategory = jobCategory;
            return jobCategoryTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobCategoryID
        {
            get
            {
                return _JobCategoryID;
            }
            set
            {
                if (_JobCategoryID != value)
                {
                    OnJobCategoryIDChanging(value);
                    ReportPropertyChanging("JobCategoryID");
                    _JobCategoryID = StructuralObject.SetValidValue(value, "JobCategoryID");
                    ReportPropertyChanged("JobCategoryID");
                    OnJobCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _JobCategoryID;
        partial void OnJobCategoryIDChanging(global::System.Int32 value);
        partial void OnJobCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JobCategory
        {
            get
            {
                return _JobCategory;
            }
            set
            {
                OnJobCategoryChanging(value);
                ReportPropertyChanging("JobCategory");
                _JobCategory = StructuralObject.SetValidValue(value, false, "JobCategory");
                ReportPropertyChanged("JobCategory");
                OnJobCategoryChanged();
            }
        }
        private global::System.String _JobCategory;
        partial void OnJobCategoryChanging(global::System.String value);
        partial void OnJobCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_EmployeeTable_JobCategoryTable", "EmployeeTable")]
        public EntityCollection<EmployeeTable> EmployeeTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeTable>("JobFindModel.FK_EmployeeTable_JobCategoryTable", "EmployeeTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeTable>("JobFindModel.FK_EmployeeTable_JobCategoryTable", "EmployeeTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_PostJobTable_JobCategoryTable", "PostJobTable")]
        public EntityCollection<PostJobTable> PostJobTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PostJobTable>("JobFindModel.FK_PostJobTable_JobCategoryTable", "PostJobTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PostJobTable>("JobFindModel.FK_PostJobTable_JobCategoryTable", "PostJobTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobFindModel", Name="JobNatureTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobNatureTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobNatureTable object.
        /// </summary>
        /// <param name="jobNatureID">Initial value of the JobNatureID property.</param>
        /// <param name="jobNature">Initial value of the JobNature property.</param>
        public static JobNatureTable CreateJobNatureTable(global::System.Int32 jobNatureID, global::System.String jobNature)
        {
            JobNatureTable jobNatureTable = new JobNatureTable();
            jobNatureTable.JobNatureID = jobNatureID;
            jobNatureTable.JobNature = jobNature;
            return jobNatureTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobNatureID
        {
            get
            {
                return _JobNatureID;
            }
            set
            {
                if (_JobNatureID != value)
                {
                    OnJobNatureIDChanging(value);
                    ReportPropertyChanging("JobNatureID");
                    _JobNatureID = StructuralObject.SetValidValue(value, "JobNatureID");
                    ReportPropertyChanged("JobNatureID");
                    OnJobNatureIDChanged();
                }
            }
        }
        private global::System.Int32 _JobNatureID;
        partial void OnJobNatureIDChanging(global::System.Int32 value);
        partial void OnJobNatureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JobNature
        {
            get
            {
                return _JobNature;
            }
            set
            {
                OnJobNatureChanging(value);
                ReportPropertyChanging("JobNature");
                _JobNature = StructuralObject.SetValidValue(value, false, "JobNature");
                ReportPropertyChanged("JobNature");
                OnJobNatureChanged();
            }
        }
        private global::System.String _JobNature;
        partial void OnJobNatureChanging(global::System.String value);
        partial void OnJobNatureChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_PostJobTable_JobNatureTable", "PostJobTable")]
        public EntityCollection<PostJobTable> PostJobTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PostJobTable>("JobFindModel.FK_PostJobTable_JobNatureTable", "PostJobTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PostJobTable>("JobFindModel.FK_PostJobTable_JobNatureTable", "PostJobTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobFindModel", Name="JobRequirementDetailTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobRequirementDetailTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobRequirementDetailTable object.
        /// </summary>
        /// <param name="jobRequirementDetailID">Initial value of the JobRequirementDetailID property.</param>
        /// <param name="jobRequirementID">Initial value of the JobRequirementID property.</param>
        /// <param name="jobRequirementDetails">Initial value of the JobRequirementDetails property.</param>
        public static JobRequirementDetailTable CreateJobRequirementDetailTable(global::System.Int32 jobRequirementDetailID, global::System.Int32 jobRequirementID, global::System.String jobRequirementDetails)
        {
            JobRequirementDetailTable jobRequirementDetailTable = new JobRequirementDetailTable();
            jobRequirementDetailTable.JobRequirementDetailID = jobRequirementDetailID;
            jobRequirementDetailTable.JobRequirementID = jobRequirementID;
            jobRequirementDetailTable.JobRequirementDetails = jobRequirementDetails;
            return jobRequirementDetailTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobRequirementDetailID
        {
            get
            {
                return _JobRequirementDetailID;
            }
            set
            {
                if (_JobRequirementDetailID != value)
                {
                    OnJobRequirementDetailIDChanging(value);
                    ReportPropertyChanging("JobRequirementDetailID");
                    _JobRequirementDetailID = StructuralObject.SetValidValue(value, "JobRequirementDetailID");
                    ReportPropertyChanged("JobRequirementDetailID");
                    OnJobRequirementDetailIDChanged();
                }
            }
        }
        private global::System.Int32 _JobRequirementDetailID;
        partial void OnJobRequirementDetailIDChanging(global::System.Int32 value);
        partial void OnJobRequirementDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobRequirementID
        {
            get
            {
                return _JobRequirementID;
            }
            set
            {
                OnJobRequirementIDChanging(value);
                ReportPropertyChanging("JobRequirementID");
                _JobRequirementID = StructuralObject.SetValidValue(value, "JobRequirementID");
                ReportPropertyChanged("JobRequirementID");
                OnJobRequirementIDChanged();
            }
        }
        private global::System.Int32 _JobRequirementID;
        partial void OnJobRequirementIDChanging(global::System.Int32 value);
        partial void OnJobRequirementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JobRequirementDetails
        {
            get
            {
                return _JobRequirementDetails;
            }
            set
            {
                OnJobRequirementDetailsChanging(value);
                ReportPropertyChanging("JobRequirementDetails");
                _JobRequirementDetails = StructuralObject.SetValidValue(value, false, "JobRequirementDetails");
                ReportPropertyChanged("JobRequirementDetails");
                OnJobRequirementDetailsChanged();
            }
        }
        private global::System.String _JobRequirementDetails;
        partial void OnJobRequirementDetailsChanging(global::System.String value);
        partial void OnJobRequirementDetailsChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_JobRequirementDetailTable_JobRequirementsTable", "JobRequirementsTable")]
        public JobRequirementsTable JobRequirementsTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobRequirementsTable>("JobFindModel.FK_JobRequirementDetailTable_JobRequirementsTable", "JobRequirementsTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobRequirementsTable>("JobFindModel.FK_JobRequirementDetailTable_JobRequirementsTable", "JobRequirementsTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobRequirementsTable> JobRequirementsTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobRequirementsTable>("JobFindModel.FK_JobRequirementDetailTable_JobRequirementsTable", "JobRequirementsTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobRequirementsTable>("JobFindModel.FK_JobRequirementDetailTable_JobRequirementsTable", "JobRequirementsTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobFindModel", Name="JobRequirementsTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobRequirementsTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobRequirementsTable object.
        /// </summary>
        /// <param name="jobRequirementID">Initial value of the JobRequirementID property.</param>
        /// <param name="jobRequirementTitle">Initial value of the JobRequirementTitle property.</param>
        /// <param name="postJobID">Initial value of the PostJobID property.</param>
        public static JobRequirementsTable CreateJobRequirementsTable(global::System.Int32 jobRequirementID, global::System.String jobRequirementTitle, global::System.Int32 postJobID)
        {
            JobRequirementsTable jobRequirementsTable = new JobRequirementsTable();
            jobRequirementsTable.JobRequirementID = jobRequirementID;
            jobRequirementsTable.JobRequirementTitle = jobRequirementTitle;
            jobRequirementsTable.PostJobID = postJobID;
            return jobRequirementsTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobRequirementID
        {
            get
            {
                return _JobRequirementID;
            }
            set
            {
                if (_JobRequirementID != value)
                {
                    OnJobRequirementIDChanging(value);
                    ReportPropertyChanging("JobRequirementID");
                    _JobRequirementID = StructuralObject.SetValidValue(value, "JobRequirementID");
                    ReportPropertyChanged("JobRequirementID");
                    OnJobRequirementIDChanged();
                }
            }
        }
        private global::System.Int32 _JobRequirementID;
        partial void OnJobRequirementIDChanging(global::System.Int32 value);
        partial void OnJobRequirementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JobRequirementTitle
        {
            get
            {
                return _JobRequirementTitle;
            }
            set
            {
                OnJobRequirementTitleChanging(value);
                ReportPropertyChanging("JobRequirementTitle");
                _JobRequirementTitle = StructuralObject.SetValidValue(value, false, "JobRequirementTitle");
                ReportPropertyChanged("JobRequirementTitle");
                OnJobRequirementTitleChanged();
            }
        }
        private global::System.String _JobRequirementTitle;
        partial void OnJobRequirementTitleChanging(global::System.String value);
        partial void OnJobRequirementTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostJobID
        {
            get
            {
                return _PostJobID;
            }
            set
            {
                OnPostJobIDChanging(value);
                ReportPropertyChanging("PostJobID");
                _PostJobID = StructuralObject.SetValidValue(value, "PostJobID");
                ReportPropertyChanged("PostJobID");
                OnPostJobIDChanged();
            }
        }
        private global::System.Int32 _PostJobID;
        partial void OnPostJobIDChanging(global::System.Int32 value);
        partial void OnPostJobIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_JobRequirementDetailTable_JobRequirementsTable", "JobRequirementDetailTable")]
        public EntityCollection<JobRequirementDetailTable> JobRequirementDetailTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobRequirementDetailTable>("JobFindModel.FK_JobRequirementDetailTable_JobRequirementsTable", "JobRequirementDetailTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobRequirementDetailTable>("JobFindModel.FK_JobRequirementDetailTable_JobRequirementsTable", "JobRequirementDetailTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_PostJobTable_JobRequirementsTable", "PostJobTable")]
        public EntityCollection<PostJobTable> PostJobTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PostJobTable>("JobFindModel.FK_PostJobTable_JobRequirementsTable", "PostJobTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PostJobTable>("JobFindModel.FK_PostJobTable_JobRequirementsTable", "PostJobTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobFindModel", Name="JobStatusTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobStatusTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobStatusTable object.
        /// </summary>
        /// <param name="jobStatusID">Initial value of the JobStatusID property.</param>
        /// <param name="jobStatus">Initial value of the JobStatus property.</param>
        public static JobStatusTable CreateJobStatusTable(global::System.Int32 jobStatusID, global::System.String jobStatus)
        {
            JobStatusTable jobStatusTable = new JobStatusTable();
            jobStatusTable.JobStatusID = jobStatusID;
            jobStatusTable.JobStatus = jobStatus;
            return jobStatusTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobStatusID
        {
            get
            {
                return _JobStatusID;
            }
            set
            {
                if (_JobStatusID != value)
                {
                    OnJobStatusIDChanging(value);
                    ReportPropertyChanging("JobStatusID");
                    _JobStatusID = StructuralObject.SetValidValue(value, "JobStatusID");
                    ReportPropertyChanged("JobStatusID");
                    OnJobStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _JobStatusID;
        partial void OnJobStatusIDChanging(global::System.Int32 value);
        partial void OnJobStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JobStatus
        {
            get
            {
                return _JobStatus;
            }
            set
            {
                OnJobStatusChanging(value);
                ReportPropertyChanging("JobStatus");
                _JobStatus = StructuralObject.SetValidValue(value, false, "JobStatus");
                ReportPropertyChanged("JobStatus");
                OnJobStatusChanged();
            }
        }
        private global::System.String _JobStatus;
        partial void OnJobStatusChanging(global::System.String value);
        partial void OnJobStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatusMessage
        {
            get
            {
                return _StatusMessage;
            }
            set
            {
                OnStatusMessageChanging(value);
                ReportPropertyChanging("StatusMessage");
                _StatusMessage = StructuralObject.SetValidValue(value, true, "StatusMessage");
                ReportPropertyChanged("StatusMessage");
                OnStatusMessageChanged();
            }
        }
        private global::System.String _StatusMessage;
        partial void OnStatusMessageChanging(global::System.String value);
        partial void OnStatusMessageChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_PostJobTable_JobStatusTable", "PostJobTable")]
        public EntityCollection<PostJobTable> PostJobTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PostJobTable>("JobFindModel.FK_PostJobTable_JobStatusTable", "PostJobTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PostJobTable>("JobFindModel.FK_PostJobTable_JobStatusTable", "PostJobTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobFindModel", Name="LanguageTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LanguageTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LanguageTable object.
        /// </summary>
        /// <param name="languageID">Initial value of the LanguageID property.</param>
        /// <param name="languageName">Initial value of the LanguageName property.</param>
        /// <param name="proficiency">Initial value of the Proficiency property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        public static LanguageTable CreateLanguageTable(global::System.Int32 languageID, global::System.String languageName, global::System.String proficiency, global::System.Int32 employeeID)
        {
            LanguageTable languageTable = new LanguageTable();
            languageTable.LanguageID = languageID;
            languageTable.LanguageName = languageName;
            languageTable.Proficiency = proficiency;
            languageTable.EmployeeID = employeeID;
            return languageTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageID
        {
            get
            {
                return _LanguageID;
            }
            set
            {
                if (_LanguageID != value)
                {
                    OnLanguageIDChanging(value);
                    ReportPropertyChanging("LanguageID");
                    _LanguageID = StructuralObject.SetValidValue(value, "LanguageID");
                    ReportPropertyChanged("LanguageID");
                    OnLanguageIDChanged();
                }
            }
        }
        private global::System.Int32 _LanguageID;
        partial void OnLanguageIDChanging(global::System.Int32 value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LanguageName
        {
            get
            {
                return _LanguageName;
            }
            set
            {
                OnLanguageNameChanging(value);
                ReportPropertyChanging("LanguageName");
                _LanguageName = StructuralObject.SetValidValue(value, false, "LanguageName");
                ReportPropertyChanged("LanguageName");
                OnLanguageNameChanged();
            }
        }
        private global::System.String _LanguageName;
        partial void OnLanguageNameChanging(global::System.String value);
        partial void OnLanguageNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Proficiency
        {
            get
            {
                return _Proficiency;
            }
            set
            {
                OnProficiencyChanging(value);
                ReportPropertyChanging("Proficiency");
                _Proficiency = StructuralObject.SetValidValue(value, false, "Proficiency");
                ReportPropertyChanged("Proficiency");
                OnProficiencyChanged();
            }
        }
        private global::System.String _Proficiency;
        partial void OnProficiencyChanging(global::System.String value);
        partial void OnProficiencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value, "EmployeeID");
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_LanguageTable_EmployeeTable", "EmployeeTable")]
        public EmployeeTable EmployeeTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("JobFindModel.FK_LanguageTable_EmployeeTable", "EmployeeTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("JobFindModel.FK_LanguageTable_EmployeeTable", "EmployeeTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeTable> EmployeeTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("JobFindModel.FK_LanguageTable_EmployeeTable", "EmployeeTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeTable>("JobFindModel.FK_LanguageTable_EmployeeTable", "EmployeeTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobFindModel", Name="PostJobTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PostJobTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PostJobTable object.
        /// </summary>
        /// <param name="postJobID">Initial value of the PostJobID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="jobCategoryID">Initial value of the JobCategoryID property.</param>
        /// <param name="jobTitle">Initial value of the JobTitle property.</param>
        /// <param name="jobDescription">Initial value of the JobDescription property.</param>
        /// <param name="minSalary">Initial value of the MinSalary property.</param>
        /// <param name="mixSalary">Initial value of the MixSalary property.</param>
        /// <param name="location">Initial value of the Location property.</param>
        /// <param name="vacancey">Initial value of the Vacancey property.</param>
        /// <param name="jobNatureID">Initial value of the JobNatureID property.</param>
        /// <param name="postDate">Initial value of the PostDate property.</param>
        /// <param name="applicationLastDate">Initial value of the ApplicationLastDate property.</param>
        /// <param name="lastDate">Initial value of the LastDate property.</param>
        /// <param name="jobRequirementID">Initial value of the JobRequirementID property.</param>
        /// <param name="jobStatusID">Initial value of the JobStatusID property.</param>
        public static PostJobTable CreatePostJobTable(global::System.Int32 postJobID, global::System.Int32 userID, global::System.Int32 companyID, global::System.Int32 jobCategoryID, global::System.String jobTitle, global::System.String jobDescription, global::System.Int32 minSalary, global::System.Int32 mixSalary, global::System.String location, global::System.Int32 vacancey, global::System.Int32 jobNatureID, global::System.DateTime postDate, global::System.DateTime applicationLastDate, global::System.DateTime lastDate, global::System.Int32 jobRequirementID, global::System.Int32 jobStatusID)
        {
            PostJobTable postJobTable = new PostJobTable();
            postJobTable.PostJobID = postJobID;
            postJobTable.UserID = userID;
            postJobTable.CompanyID = companyID;
            postJobTable.JobCategoryID = jobCategoryID;
            postJobTable.JobTitle = jobTitle;
            postJobTable.JobDescription = jobDescription;
            postJobTable.MinSalary = minSalary;
            postJobTable.MixSalary = mixSalary;
            postJobTable.Location = location;
            postJobTable.Vacancey = vacancey;
            postJobTable.JobNatureID = jobNatureID;
            postJobTable.PostDate = postDate;
            postJobTable.ApplicationLastDate = applicationLastDate;
            postJobTable.LastDate = lastDate;
            postJobTable.JobRequirementID = jobRequirementID;
            postJobTable.JobStatusID = jobStatusID;
            return postJobTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostJobID
        {
            get
            {
                return _PostJobID;
            }
            set
            {
                if (_PostJobID != value)
                {
                    OnPostJobIDChanging(value);
                    ReportPropertyChanging("PostJobID");
                    _PostJobID = StructuralObject.SetValidValue(value, "PostJobID");
                    ReportPropertyChanged("PostJobID");
                    OnPostJobIDChanged();
                }
            }
        }
        private global::System.Int32 _PostJobID;
        partial void OnPostJobIDChanging(global::System.Int32 value);
        partial void OnPostJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value, "CompanyID");
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobCategoryID
        {
            get
            {
                return _JobCategoryID;
            }
            set
            {
                OnJobCategoryIDChanging(value);
                ReportPropertyChanging("JobCategoryID");
                _JobCategoryID = StructuralObject.SetValidValue(value, "JobCategoryID");
                ReportPropertyChanged("JobCategoryID");
                OnJobCategoryIDChanged();
            }
        }
        private global::System.Int32 _JobCategoryID;
        partial void OnJobCategoryIDChanging(global::System.Int32 value);
        partial void OnJobCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JobTitle
        {
            get
            {
                return _JobTitle;
            }
            set
            {
                OnJobTitleChanging(value);
                ReportPropertyChanging("JobTitle");
                _JobTitle = StructuralObject.SetValidValue(value, false, "JobTitle");
                ReportPropertyChanged("JobTitle");
                OnJobTitleChanged();
            }
        }
        private global::System.String _JobTitle;
        partial void OnJobTitleChanging(global::System.String value);
        partial void OnJobTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JobDescription
        {
            get
            {
                return _JobDescription;
            }
            set
            {
                OnJobDescriptionChanging(value);
                ReportPropertyChanging("JobDescription");
                _JobDescription = StructuralObject.SetValidValue(value, false, "JobDescription");
                ReportPropertyChanged("JobDescription");
                OnJobDescriptionChanged();
            }
        }
        private global::System.String _JobDescription;
        partial void OnJobDescriptionChanging(global::System.String value);
        partial void OnJobDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinSalary
        {
            get
            {
                return _MinSalary;
            }
            set
            {
                OnMinSalaryChanging(value);
                ReportPropertyChanging("MinSalary");
                _MinSalary = StructuralObject.SetValidValue(value, "MinSalary");
                ReportPropertyChanged("MinSalary");
                OnMinSalaryChanged();
            }
        }
        private global::System.Int32 _MinSalary;
        partial void OnMinSalaryChanging(global::System.Int32 value);
        partial void OnMinSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MixSalary
        {
            get
            {
                return _MixSalary;
            }
            set
            {
                OnMixSalaryChanging(value);
                ReportPropertyChanging("MixSalary");
                _MixSalary = StructuralObject.SetValidValue(value, "MixSalary");
                ReportPropertyChanged("MixSalary");
                OnMixSalaryChanged();
            }
        }
        private global::System.Int32 _MixSalary;
        partial void OnMixSalaryChanging(global::System.Int32 value);
        partial void OnMixSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, false, "Location");
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Vacancey
        {
            get
            {
                return _Vacancey;
            }
            set
            {
                OnVacanceyChanging(value);
                ReportPropertyChanging("Vacancey");
                _Vacancey = StructuralObject.SetValidValue(value, "Vacancey");
                ReportPropertyChanged("Vacancey");
                OnVacanceyChanged();
            }
        }
        private global::System.Int32 _Vacancey;
        partial void OnVacanceyChanging(global::System.Int32 value);
        partial void OnVacanceyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobNatureID
        {
            get
            {
                return _JobNatureID;
            }
            set
            {
                OnJobNatureIDChanging(value);
                ReportPropertyChanging("JobNatureID");
                _JobNatureID = StructuralObject.SetValidValue(value, "JobNatureID");
                ReportPropertyChanged("JobNatureID");
                OnJobNatureIDChanged();
            }
        }
        private global::System.Int32 _JobNatureID;
        partial void OnJobNatureIDChanging(global::System.Int32 value);
        partial void OnJobNatureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PostDate
        {
            get
            {
                return _PostDate;
            }
            set
            {
                OnPostDateChanging(value);
                ReportPropertyChanging("PostDate");
                _PostDate = StructuralObject.SetValidValue(value, "PostDate");
                ReportPropertyChanged("PostDate");
                OnPostDateChanged();
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnPostDateChanging(global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ApplicationLastDate
        {
            get
            {
                return _ApplicationLastDate;
            }
            set
            {
                OnApplicationLastDateChanging(value);
                ReportPropertyChanging("ApplicationLastDate");
                _ApplicationLastDate = StructuralObject.SetValidValue(value, "ApplicationLastDate");
                ReportPropertyChanged("ApplicationLastDate");
                OnApplicationLastDateChanged();
            }
        }
        private global::System.DateTime _ApplicationLastDate;
        partial void OnApplicationLastDateChanging(global::System.DateTime value);
        partial void OnApplicationLastDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastDate
        {
            get
            {
                return _LastDate;
            }
            set
            {
                OnLastDateChanging(value);
                ReportPropertyChanging("LastDate");
                _LastDate = StructuralObject.SetValidValue(value, "LastDate");
                ReportPropertyChanged("LastDate");
                OnLastDateChanged();
            }
        }
        private global::System.DateTime _LastDate;
        partial void OnLastDateChanging(global::System.DateTime value);
        partial void OnLastDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobRequirementID
        {
            get
            {
                return _JobRequirementID;
            }
            set
            {
                OnJobRequirementIDChanging(value);
                ReportPropertyChanging("JobRequirementID");
                _JobRequirementID = StructuralObject.SetValidValue(value, "JobRequirementID");
                ReportPropertyChanged("JobRequirementID");
                OnJobRequirementIDChanged();
            }
        }
        private global::System.Int32 _JobRequirementID;
        partial void OnJobRequirementIDChanging(global::System.Int32 value);
        partial void OnJobRequirementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobStatusID
        {
            get
            {
                return _JobStatusID;
            }
            set
            {
                OnJobStatusIDChanging(value);
                ReportPropertyChanging("JobStatusID");
                _JobStatusID = StructuralObject.SetValidValue(value, "JobStatusID");
                ReportPropertyChanged("JobStatusID");
                OnJobStatusIDChanged();
            }
        }
        private global::System.Int32 _JobStatusID;
        partial void OnJobStatusIDChanging(global::System.Int32 value);
        partial void OnJobStatusIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_PostJobTable_CompanyTable", "CompanyTable")]
        public CompanyTable CompanyTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyTable>("JobFindModel.FK_PostJobTable_CompanyTable", "CompanyTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyTable>("JobFindModel.FK_PostJobTable_CompanyTable", "CompanyTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyTable> CompanyTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyTable>("JobFindModel.FK_PostJobTable_CompanyTable", "CompanyTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyTable>("JobFindModel.FK_PostJobTable_CompanyTable", "CompanyTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_JobApplyTable_PostJobTable", "JobApplyTable")]
        public EntityCollection<JobApplyTable> JobApplyTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobApplyTable>("JobFindModel.FK_JobApplyTable_PostJobTable", "JobApplyTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobApplyTable>("JobFindModel.FK_JobApplyTable_PostJobTable", "JobApplyTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_PostJobTable_JobCategoryTable", "JobCategoryTable")]
        public JobCategoryTable JobCategoryTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobCategoryTable>("JobFindModel.FK_PostJobTable_JobCategoryTable", "JobCategoryTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobCategoryTable>("JobFindModel.FK_PostJobTable_JobCategoryTable", "JobCategoryTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobCategoryTable> JobCategoryTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobCategoryTable>("JobFindModel.FK_PostJobTable_JobCategoryTable", "JobCategoryTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobCategoryTable>("JobFindModel.FK_PostJobTable_JobCategoryTable", "JobCategoryTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_PostJobTable_JobNatureTable", "JobNatureTable")]
        public JobNatureTable JobNatureTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobNatureTable>("JobFindModel.FK_PostJobTable_JobNatureTable", "JobNatureTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobNatureTable>("JobFindModel.FK_PostJobTable_JobNatureTable", "JobNatureTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobNatureTable> JobNatureTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobNatureTable>("JobFindModel.FK_PostJobTable_JobNatureTable", "JobNatureTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobNatureTable>("JobFindModel.FK_PostJobTable_JobNatureTable", "JobNatureTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_PostJobTable_JobRequirementsTable", "JobRequirementsTable")]
        public JobRequirementsTable JobRequirementsTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobRequirementsTable>("JobFindModel.FK_PostJobTable_JobRequirementsTable", "JobRequirementsTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobRequirementsTable>("JobFindModel.FK_PostJobTable_JobRequirementsTable", "JobRequirementsTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobRequirementsTable> JobRequirementsTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobRequirementsTable>("JobFindModel.FK_PostJobTable_JobRequirementsTable", "JobRequirementsTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobRequirementsTable>("JobFindModel.FK_PostJobTable_JobRequirementsTable", "JobRequirementsTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_PostJobTable_JobStatusTable", "JobStatusTable")]
        public JobStatusTable JobStatusTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobStatusTable>("JobFindModel.FK_PostJobTable_JobStatusTable", "JobStatusTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobStatusTable>("JobFindModel.FK_PostJobTable_JobStatusTable", "JobStatusTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobStatusTable> JobStatusTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobStatusTable>("JobFindModel.FK_PostJobTable_JobStatusTable", "JobStatusTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobStatusTable>("JobFindModel.FK_PostJobTable_JobStatusTable", "JobStatusTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_PostJobTable_UserTable", "UserTable")]
        public UserTable UserTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserTable>("JobFindModel.FK_PostJobTable_UserTable", "UserTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserTable>("JobFindModel.FK_PostJobTable_UserTable", "UserTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserTable> UserTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserTable>("JobFindModel.FK_PostJobTable_UserTable", "UserTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserTable>("JobFindModel.FK_PostJobTable_UserTable", "UserTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobFindModel", Name="SkillTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SkillTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SkillTable object.
        /// </summary>
        /// <param name="skillID">Initial value of the SkillID property.</param>
        /// <param name="skillName">Initial value of the SkillName property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        public static SkillTable CreateSkillTable(global::System.Int32 skillID, global::System.String skillName, global::System.Int32 employeeID)
        {
            SkillTable skillTable = new SkillTable();
            skillTable.SkillID = skillID;
            skillTable.SkillName = skillName;
            skillTable.EmployeeID = employeeID;
            return skillTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SkillID
        {
            get
            {
                return _SkillID;
            }
            set
            {
                if (_SkillID != value)
                {
                    OnSkillIDChanging(value);
                    ReportPropertyChanging("SkillID");
                    _SkillID = StructuralObject.SetValidValue(value, "SkillID");
                    ReportPropertyChanged("SkillID");
                    OnSkillIDChanged();
                }
            }
        }
        private global::System.Int32 _SkillID;
        partial void OnSkillIDChanging(global::System.Int32 value);
        partial void OnSkillIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SkillName
        {
            get
            {
                return _SkillName;
            }
            set
            {
                OnSkillNameChanging(value);
                ReportPropertyChanging("SkillName");
                _SkillName = StructuralObject.SetValidValue(value, false, "SkillName");
                ReportPropertyChanged("SkillName");
                OnSkillNameChanged();
            }
        }
        private global::System.String _SkillName;
        partial void OnSkillNameChanging(global::System.String value);
        partial void OnSkillNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value, "EmployeeID");
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_SkillTable_EmployeeTable", "EmployeeTable")]
        public EmployeeTable EmployeeTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("JobFindModel.FK_SkillTable_EmployeeTable", "EmployeeTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("JobFindModel.FK_SkillTable_EmployeeTable", "EmployeeTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeTable> EmployeeTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("JobFindModel.FK_SkillTable_EmployeeTable", "EmployeeTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeTable>("JobFindModel.FK_SkillTable_EmployeeTable", "EmployeeTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobFindModel", Name="UserTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserTable object.
        /// </summary>
        /// <param name="usersID">Initial value of the UsersID property.</param>
        /// <param name="userTypeID">Initial value of the UserTypeID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        /// <param name="contactNO">Initial value of the ContactNO property.</param>
        /// <param name="accountStatusID">Initial value of the AccountStatusID property.</param>
        public static UserTable CreateUserTable(global::System.Int32 usersID, global::System.Int32 userTypeID, global::System.String userName, global::System.String password, global::System.String emailAddress, global::System.String contactNO, global::System.Int32 accountStatusID)
        {
            UserTable userTable = new UserTable();
            userTable.UsersID = usersID;
            userTable.UserTypeID = userTypeID;
            userTable.UserName = userName;
            userTable.Password = password;
            userTable.EmailAddress = emailAddress;
            userTable.ContactNO = contactNO;
            userTable.AccountStatusID = accountStatusID;
            return userTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UsersID
        {
            get
            {
                return _UsersID;
            }
            set
            {
                if (_UsersID != value)
                {
                    OnUsersIDChanging(value);
                    ReportPropertyChanging("UsersID");
                    _UsersID = StructuralObject.SetValidValue(value, "UsersID");
                    ReportPropertyChanged("UsersID");
                    OnUsersIDChanged();
                }
            }
        }
        private global::System.Int32 _UsersID;
        partial void OnUsersIDChanging(global::System.Int32 value);
        partial void OnUsersIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserTypeID
        {
            get
            {
                return _UserTypeID;
            }
            set
            {
                OnUserTypeIDChanging(value);
                ReportPropertyChanging("UserTypeID");
                _UserTypeID = StructuralObject.SetValidValue(value, "UserTypeID");
                ReportPropertyChanged("UserTypeID");
                OnUserTypeIDChanged();
            }
        }
        private global::System.Int32 _UserTypeID;
        partial void OnUserTypeIDChanging(global::System.Int32 value);
        partial void OnUserTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false, "EmailAddress");
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactNO
        {
            get
            {
                return _ContactNO;
            }
            set
            {
                OnContactNOChanging(value);
                ReportPropertyChanging("ContactNO");
                _ContactNO = StructuralObject.SetValidValue(value, false, "ContactNO");
                ReportPropertyChanged("ContactNO");
                OnContactNOChanged();
            }
        }
        private global::System.String _ContactNO;
        partial void OnContactNOChanging(global::System.String value);
        partial void OnContactNOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountStatusID
        {
            get
            {
                return _AccountStatusID;
            }
            set
            {
                OnAccountStatusIDChanging(value);
                ReportPropertyChanging("AccountStatusID");
                _AccountStatusID = StructuralObject.SetValidValue(value, "AccountStatusID");
                ReportPropertyChanged("AccountStatusID");
                OnAccountStatusIDChanged();
            }
        }
        private global::System.Int32 _AccountStatusID;
        partial void OnAccountStatusIDChanging(global::System.Int32 value);
        partial void OnAccountStatusIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_UserTable_AccountStatusTable", "AccountStatusTable")]
        public AccountStatusTable AccountStatusTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountStatusTable>("JobFindModel.FK_UserTable_AccountStatusTable", "AccountStatusTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountStatusTable>("JobFindModel.FK_UserTable_AccountStatusTable", "AccountStatusTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccountStatusTable> AccountStatusTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountStatusTable>("JobFindModel.FK_UserTable_AccountStatusTable", "AccountStatusTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccountStatusTable>("JobFindModel.FK_UserTable_AccountStatusTable", "AccountStatusTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_CompanyTable_UserTable", "CompanyTable")]
        public EntityCollection<CompanyTable> CompanyTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyTable>("JobFindModel.FK_CompanyTable_UserTable", "CompanyTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyTable>("JobFindModel.FK_CompanyTable_UserTable", "CompanyTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_EmployeeTable_UserTable", "EmployeeTable")]
        public EntityCollection<EmployeeTable> EmployeeTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeTable>("JobFindModel.FK_EmployeeTable_UserTable", "EmployeeTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeTable>("JobFindModel.FK_EmployeeTable_UserTable", "EmployeeTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_PostJobTable_UserTable", "PostJobTable")]
        public EntityCollection<PostJobTable> PostJobTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PostJobTable>("JobFindModel.FK_PostJobTable_UserTable", "PostJobTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PostJobTable>("JobFindModel.FK_PostJobTable_UserTable", "PostJobTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_UserTypeTable_UserTable", "UserTypeTable")]
        public UserTypeTable UserTypeTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserTypeTable>("JobFindModel.FK_UserTypeTable_UserTable", "UserTypeTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserTypeTable>("JobFindModel.FK_UserTypeTable_UserTable", "UserTypeTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserTypeTable> UserTypeTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserTypeTable>("JobFindModel.FK_UserTypeTable_UserTable", "UserTypeTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserTypeTable>("JobFindModel.FK_UserTypeTable_UserTable", "UserTypeTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobFindModel", Name="UserTypeTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserTypeTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserTypeTable object.
        /// </summary>
        /// <param name="userTypeId">Initial value of the UserTypeId property.</param>
        public static UserTypeTable CreateUserTypeTable(global::System.Int32 userTypeId)
        {
            UserTypeTable userTypeTable = new UserTypeTable();
            userTypeTable.UserTypeId = userTypeId;
            return userTypeTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserTypeId
        {
            get
            {
                return _UserTypeId;
            }
            set
            {
                if (_UserTypeId != value)
                {
                    OnUserTypeIdChanging(value);
                    ReportPropertyChanging("UserTypeId");
                    _UserTypeId = StructuralObject.SetValidValue(value, "UserTypeId");
                    ReportPropertyChanged("UserTypeId");
                    OnUserTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _UserTypeId;
        partial void OnUserTypeIdChanging(global::System.Int32 value);
        partial void OnUserTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserType
        {
            get
            {
                return _UserType;
            }
            set
            {
                OnUserTypeChanging(value);
                ReportPropertyChanging("UserType");
                _UserType = StructuralObject.SetValidValue(value, true, "UserType");
                ReportPropertyChanged("UserType");
                OnUserTypeChanged();
            }
        }
        private global::System.String _UserType;
        partial void OnUserTypeChanging(global::System.String value);
        partial void OnUserTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_UserTypeTable_UserTable", "UserTable")]
        public EntityCollection<UserTable> UserTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserTable>("JobFindModel.FK_UserTypeTable_UserTable", "UserTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserTable>("JobFindModel.FK_UserTypeTable_UserTable", "UserTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobFindModel", Name="WorkExpericenTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkExpericenTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkExpericenTable object.
        /// </summary>
        /// <param name="workExperienceID">Initial value of the WorkExperienceID property.</param>
        /// <param name="company">Initial value of the Company property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="fromYear">Initial value of the FromYear property.</param>
        /// <param name="toYear">Initial value of the ToYear property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        public static WorkExpericenTable CreateWorkExpericenTable(global::System.Int32 workExperienceID, global::System.String company, global::System.String title, global::System.Int32 countryID, global::System.DateTime fromYear, global::System.DateTime toYear, global::System.String description, global::System.Int32 employeeID)
        {
            WorkExpericenTable workExpericenTable = new WorkExpericenTable();
            workExpericenTable.WorkExperienceID = workExperienceID;
            workExpericenTable.Company = company;
            workExpericenTable.Title = title;
            workExpericenTable.CountryID = countryID;
            workExpericenTable.FromYear = fromYear;
            workExpericenTable.ToYear = toYear;
            workExpericenTable.Description = description;
            workExpericenTable.EmployeeID = employeeID;
            return workExpericenTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkExperienceID
        {
            get
            {
                return _WorkExperienceID;
            }
            set
            {
                if (_WorkExperienceID != value)
                {
                    OnWorkExperienceIDChanging(value);
                    ReportPropertyChanging("WorkExperienceID");
                    _WorkExperienceID = StructuralObject.SetValidValue(value, "WorkExperienceID");
                    ReportPropertyChanged("WorkExperienceID");
                    OnWorkExperienceIDChanged();
                }
            }
        }
        private global::System.Int32 _WorkExperienceID;
        partial void OnWorkExperienceIDChanging(global::System.Int32 value);
        partial void OnWorkExperienceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Company
        {
            get
            {
                return _Company;
            }
            set
            {
                OnCompanyChanging(value);
                ReportPropertyChanging("Company");
                _Company = StructuralObject.SetValidValue(value, false, "Company");
                ReportPropertyChanged("Company");
                OnCompanyChanged();
            }
        }
        private global::System.String _Company;
        partial void OnCompanyChanging(global::System.String value);
        partial void OnCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, "CountryID");
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FromYear
        {
            get
            {
                return _FromYear;
            }
            set
            {
                OnFromYearChanging(value);
                ReportPropertyChanging("FromYear");
                _FromYear = StructuralObject.SetValidValue(value, "FromYear");
                ReportPropertyChanged("FromYear");
                OnFromYearChanged();
            }
        }
        private global::System.DateTime _FromYear;
        partial void OnFromYearChanging(global::System.DateTime value);
        partial void OnFromYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ToYear
        {
            get
            {
                return _ToYear;
            }
            set
            {
                OnToYearChanging(value);
                ReportPropertyChanging("ToYear");
                _ToYear = StructuralObject.SetValidValue(value, "ToYear");
                ReportPropertyChanged("ToYear");
                OnToYearChanged();
            }
        }
        private global::System.DateTime _ToYear;
        partial void OnToYearChanging(global::System.DateTime value);
        partial void OnToYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value, "EmployeeID");
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobFindModel", "FK_WorkExpericenTable_CountryTable", "CountryTable")]
        public CountryTable CountryTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryTable>("JobFindModel.FK_WorkExpericenTable_CountryTable", "CountryTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryTable>("JobFindModel.FK_WorkExpericenTable_CountryTable", "CountryTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CountryTable> CountryTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryTable>("JobFindModel.FK_WorkExpericenTable_CountryTable", "CountryTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CountryTable>("JobFindModel.FK_WorkExpericenTable_CountryTable", "CountryTable", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
